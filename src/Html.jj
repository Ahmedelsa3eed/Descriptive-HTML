options {
	STATIC = false;
}
PARSER_BEGIN(HtmlParser)

public class HtmlParser {
  String text = ">";
  String link = "";

  public static void main(String args[]) {
    while(true) {
		try {
		  HtmlParser htmlParser = new HtmlParser(System.in);
		  while(true) {
		    System.out.println(htmlParser.Input());
		  }
		}catch(Exception e) {
		  System.out.println(e.getMessage());
		  continue;
		}
    }
  }
}

PARSER_END(HtmlParser)

SKIP : { "\t" | "\r" }
TOKEN :{ <ALPHANUMERIC: ["0"-"9"] | ["a"-"z"] | ["A"-"Z"] | "/" | ":" | "." | "_" | " "> }
TOKEN :{ <QUOTE: "\""> }
TOKEN: { <AND: " AND " > }
TOKEN: { <END: "exit" > }
TOKEN: { <LINE: "\n" > }

/** Root production. */			
String Input() : {String res="";}
{
  ( "ADD " res=element() < LINE > | < END > { System.exit(0); } )
  {
    this.text = ">";
    return res;
  }
}

String element() : {String s="";}
{
  (s = img() | s = header() | s = para() | s = url() )
  { return s;}
}

String img() :
{
  String s = "", tmp = "";
  Token t1;
  Token t2;
}
{
  "IMAGE WITH SOURCE "
  t1=<QUOTE> 
  tmp=sentence()
  t2=<QUOTE>
  {
    s = "<img src=\""+ tmp + "\"" + " />";
    return s;
  }
}

String header() : {String s="", tmp="";}
{
  "HEADING " tmp=decorated_text()
  {
    s="<h1 " + tmp + this.text + "</h1>"; 
    return s;
  }
}

String para() : {String s="", tmp="";}
{
  "PARAGRAPH " tmp=decorated_text()
  {
    if(!tmp.isEmpty()) {
      s = "<p "+ "style=\""+ tmp + "\"" + this.text +"</p>";
    }else{
      s = "<p " + this.text +"</p>";
    }
    return s;
  }
}

String decorated_text() : {String s="", tmp1="", tmp2=""; Token t = null;}
{
  tmp1=decorated_text_() (t=<AND> (tmp2=decorated_text())+ )*
  {
    if(t != null)
    	s = tmp1 + tmp2;
    else
    	s = tmp1;
    return s;
  }
}

String decorated_text_() : {String s="", s2="";}
{
  "WITH " (text() | s2=color() | s2=font())+
  {
    if(!s2.isEmpty()) {
      return s2;
    }
    return "";
  }
}

String url() : {String s="", tmp="";}
{
  "LINK " tmp=decorated_url()
  {
    if(!tmp.isEmpty()) {
		s = "<a " + this.link + " style=\""+ tmp + "\"" + this.text + "</a>";
    }else {
		s = "<a " + this.link + this.text + "</a>";
    }
    return s;
  }
}

String decorated_url() : {String s="", tmp1="", tmp2=""; Token t = null;}
{
  tmp1=decorated_url_() (t=<AND> (tmp2=decorated_url())+ )*
  {
    if(t != null)
    	s = tmp1 + tmp2;
    else
    	s = tmp1;
    return s;
  }
}

String decorated_url_() : {String s2="";}
{
  "WITH " (text() | s2=color() | s2=font() | link())+
  {
    if(!s2.isEmpty()) {
      return s2;
    }
    else {
      return "";
    }
  }
}

void link() :
{
  String s="", tmp="", tmp2="";
  Token t1,t2, t3=null;
}
{
  "LINK "
  t1=<QUOTE>
  tmp=sentence()
  t2=<QUOTE>
  (t3=<ALPHANUMERIC> tmp2=decorated_text())* 
  {
    if(t3 != null)
    	this.link = "href=" + t1.toString() + tmp + t2.toString()+ " "+ tmp2;
    else
    	this.link = "href=" + t1.toString() + tmp + t2.toString() + tmp2;
  }
}

void text() : {String s=""; Token t1,t2;}
{
  "TEXT "
  t1=<QUOTE>
  s=sentence()
  t2=<QUOTE>
  {
    this.text += s;
  }
}

String color() : {String s="", tmp=""; Token t1,t2;}
{
  "COLOR "
  t1=<QUOTE>
  tmp=sentence()
  t2=<QUOTE>
  {
    s = "color:" + tmp + ";";
    return s;
  }
}

String font() : {String s="", tmp=""; Token t1,t2;}
{
  "FONT "
  t1=<QUOTE>
  tmp=sentence()
  t2=<QUOTE>
  {
    s = "font-family:" + tmp + ";";
    return s;
  }
}

String sentence() :
{
  Token t = null;
  String s="";
}
{
  (t=<ALPHANUMERIC> s=sentence())*
  {
    if(t != null)
    	return t.toString()+s;
    else return s;
  }
}